---
---

@import "minima";

$panel-radius: 3px;
$paragraph-font-size: 16px;

/*
  I dislike the default header sizes.
*/

h1 {
    @include relative-font-size(2.1);

    @include media-query($on-laptop) {
        @include relative-font-size(1.9);
    }
}

h2 {
    @include relative-font-size(1.5);

    @include media-query($on-laptop) {
        @include relative-font-size(1.3125);
    }
}

h3 {
    @include relative-font-size(1.17);

    @include media-query($on-laptop) {
        @include relative-font-size(1.0725);
    }
}

h4 {
    @include relative-font-size(1);

    @include media-query($on-laptop) {
      @include relative-font-size(1);
    }
}

/* Bugfix: allows syntax-highlighted code blocks
   to correctly fit to width in the presence of half-panels */
.highlighter-rouge {
	overflow-x: auto;
}

details {
    padding: $spacing-unit / 2;
    margin-bottom: $spacing-unit / 2;
    border: 1px solid $grey-color-light;
}

h-sub {
    display: block;
    font-style: italic;
    margin-top: - ($spacing-unit / 2 + $paragraph-font-size / 2);
    opacity: 75%;
}

pre-header {
	border-radius: 3px 3px 0 0;
	transform: translateY(2px);
	font-family: monospace;
	display: block;
	overflow-x: auto;
	overflow-y: none;
	font-weight: normal;
	background-color: $grey-color-light;
	border: 1px solid $grey-color-light;
	&::before {
		@extend .pre-header-tag;
		content: attr(tag);
	}
}

.pre-header-tag {
	border-radius: 2px 0 0 0;
	margin-left: 0px;
	margin-right: 1em;
	font-family: sans-serif;
	font-weight: bold;
	padding: 4px 0.5em;
	padding-top: 3px;
	background-color: lighten($grey-color, 20%);
}

/* Start of panel classes for end-use */

aside {
    @extend .panel-half;
    border: dashed 1px $grey-color-dark;
}

.altcontext {
    border-radius: $panel-radius;
    padding-top: ($spacing-unit / 2);
    /*
      Minima's Markdown already comes with
      ($spacing-unit / 2) padding-bottom
      for 'visual rhythm'.
    */
    padding-bottom: 0;
    padding-left: $spacing-unit;
    padding-right: $spacing-unit;

    border-style: dashed none dashed none;

    border-width: 2px;
    margin: ($spacing-unit / 2) 0%;
}

.panel-info {
    @extend .panel-full;
    h1, h2, h3, h4 {
        color: darken(lightblue, 50%);
    }
    border: solid 2px lightblue;

    &::before {
        content: "info";
        float: right;
        margin: - $spacing-unit - 2px;
        background: lightblue;
        color: white;
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 4;
        padding-right: $spacing-unit / 4;
        border-radius: 3px;
    }
}

.panel-warning {
    @extend .panel-full;
    h1, h2, h3, h4 {
        color: orange;
    }
    border: solid 3px orange;
    &::before {
        content: "warning";
        float: right;
        position: relative;
        top: 0;
        margin: - $spacing-unit - 3px;
        color: white;
        background: orange;
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 2;
        padding-right: $spacing-unit / 2;
        border-radius: 3px;
    }
}

.panel-danger {
    @extend .panel-full;
    h1, h2, h3, h4 {
        color: red;
    }
    border: solid 5px desaturate(red, 30%);
    &::before {
        content: "danger";
        float: right;
        position: relative;
        top: 0;
        margin: - $spacing-unit - 3px;
        color: white;
        background: desaturate(red, 30%);
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 2;
        padding-right: $spacing-unit / 2;
        border-radius: 3px;
    }
}

.panel-info-half {
    @extend .panel-half;
    h1, h2, h3, h4 {
        color: darken(lightblue, 50%);
    }
    border: solid 2px lightblue;
    &::before {
        content: "info";
        float: right;
        margin: - $spacing-unit - 2px;
        color: white;
        background: lightblue;
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 4;
        padding-right: $spacing-unit / 4;
        border-radius: 3px;
    }
}

.panel-warning-half {
    @extend .panel-half;
        h1, h2, h3, h4 {
        color: darken(orange, 5%);
    }
    border: solid 3px orange;

    &::before {
        content: "warning";
        float: right;
        position: relative;
        top: 0;
        margin: - $spacing-unit - 3px;
        color: white;
        background: orange;
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 2;
        padding-right: $spacing-unit / 2;
        border-radius: 3px;
    }
}

.panel-danger-half {
    @extend .panel-half;
    h1, h2, h3, h4 {
        color: red;
    }
    border: solid 5px desaturate(red, 30%);
    &::before {
        content: "danger";
        float: right;
        position: relative;
        top: 0;
        margin: - $spacing-unit - 3px;
        color: white;
        background: desaturate(red, 30%);
        transform: translateY($paragraph-font-size);
        padding-left: $spacing-unit / 2;
        padding-right: $spacing-unit / 2;
        border-radius: 3px;
    }
}

/*
   End of panel classes for end-use
   The rest are impl. details.
*/

.panel {
    opacity: 75%;
    border-radius: $panel-radius;
    padding-top: ($spacing-unit / 2);
    /*
      Minima's Markdown already comes with
      ($spacing-unit / 2) padding-bottom
      for 'visual rhythm'.
    */
    padding-bottom: 0;
    padding-left: $spacing-unit;
    padding-right: $spacing-unit;
}

.panel-full {
    @extend .panel;
    margin: ($spacing-unit / 2) 0%;
}

.panel-half {
    @extend .panel;
    float: right;
    width: 40%;
    margin: ($spacing-unit / 2) ($spacing-unit / 2);
    margin-right: 0;

    @include media-query($on-palm) {
        width: auto;
        float: none;
        margin: ($spacing-unit / 2) 0%;
    }
}
